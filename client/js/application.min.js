function accountSettingController(e,t,o,r,n){console.log("accountSettingController instantiated");var a=this;a.disabled=!1,a.modalChangePassword=!1,e.activeTab.profile=!1,e.activeTab.crewList=!1,e.activeTab.production=!1,r.getUserStatus().then(function(e){a.user=e.data.user}),a.changePassword=function(){a.disabled=!0,n.post("/user/changePassword",{password:a.password,user:a.user}).success(function(e){e.success&&(a.modalChangePassword=!0)})},a.refresh=function(){t.reload()}}function completeRegistrationController(e,t,o,r){console.log("completeRegistrationController instantiated");var n=this;n.modalOpen=!1,r.checkCompRegToken(o.token).then(function(e){e.user||t.go("home")}),n.completeRegistration=function(e){n.disabled=!0,r.completeRegistration(o.token,n.registerForm).then(function(e){n.modalOpen=!0})}}function crewListController(e,t,o,r,n,a){var s=this;s.showModal=!1,s.notifModal={},e.activeTab={},e.activeTab.crewList=!0,n.getUserStatus().then(function(e){t.get("/api/users/"+e.data.user._id+"/contacts").success(function(e){s.currentUser=e,"crew"===s.currentUser.role&&r.go("profile"),s.inviteUrl="http://myproducer.io/#/register?r="+e._id+"&ur=crew",s.ready=!0})}),s.addContact=function(){t.post("/api/users/addcontact",s.newContact).success(function(e){if(s.newContact.email="",s.newContact.first_name="",s.newContact.last_name="",a.track("Add Contact Clicked",{user:s.currentUser.username}),e)if(e.success){s.notifModal.isSuccess=!0;var t=e.data.username;s.notifModal.content="You have successfully added "+t+" to your crew list.",s.currentUser.contacts.push(e.data)}else e.newSuccess?(s.notifModal.isSuccess=!0,s.notifModal.content="We have sent an invitation to "+e.newEmail+". They will appear in your crew list once they accept."):(s.notifModal.isFailure=!0,s.notifModal.content=e.message);else s.notifModal.isSuccess=!0,s.notifModal.content="We have sent an invitation to "+s.newContact.email+". They will appear in your crew list when they accept."}).error(function(e){s.notifModal.isFailure=!0,s.notifModal.content="An error has occurred. Please try again."}).finally(function(){s.openNotifModal()})},s.deleteContact=function(e){t.patch("/api/users/delete-contact",{contact:e,currentUser:s.currentUser}).success(function(e){s.currentUser.contacts=e.user.contacts})},s.closeModal=function(e){"modal-container"===e.target.getAttribute("id")&&(s.selectedUserId=void 0,s.showModal=!1)},s.openModal=function(){s.showModal=!0},s.openDeleteContactModal=function(e){s.contact=e,s.showDeleteContactModal=!0},s.handleAddToButton=function(e,t){s.selectedUserId=e,s.selectedUsername=t,s.openModal()},s.addCrewToProduction=function(e,o){var r={to:s.selectedUserId,production:e};t.post("/api/crew/",r).success(function(e){s.notifModal.isSuccess=!0,s.notifModal.content="You have successfully added "+s.selectedUsername+" to "+o+"."}).error(function(e){s.notifModal.isFailure=!0,s.notifModal.content="An error has occurred. Please try again."}).finally(function(){s.openNotifModal()})},s.openNotifModal=function(){s.notifModal.show=!0},s.closeNotifModal=function(){s.notifModal.show=!1,s.notifModal.isSuccess=!1,s.notifModal.isFaiure=!1},s.closeDeleteContactModal=function(){s.showDeleteContactModal=!1},s.compareDate=function(e){return e=new Date(e),e.setDate(e.getDate()+1),!!e&&new Date<e}}function forgotPasswordController(e,t,o,r,n){console.log("forgotPasswordController instantiated");var a=this;a.modalOpen=!1,a.modal2Open=!1,a.forgot=function(e){a.disabled=!0,n.forgotPassword(e).then(function(e){"resolved"==e.message?a.modalOpen=!0:(a.modal2Open=!0,a.disabled=!1)})}}function homeController(e,t,o){var r=this;e.isLoggedIn&&t.go("profile"),o.reg&&(r.registerIntent=!0)}function loginController(e,t,o,r){var n=this;e.activeTab={},n.userRole=o.ur,e.isLoggedIn&&t.go("profile"),n.login=function(){n.error=!1,n.disabled=!0,r.login(n.loginForm.username,n.loginForm.password).then(function(){"/offer/:id"===e.returnToState?t.go("offer",{id:e.returnToStateParams}):"/production/:id"===e.returnToState?t.go("production",{id:e.returnToStateParams}):t.go("profile"),n.disabled=!1,n.loginForm={}}).catch(function(){n.error=!0,n.errorMessage="Invalid email and/or password",n.disabled=!1,n.loginForm={}})}}function logoutController(e,t,o){var r=this;e.activeTab={},r.logout=function(){o.logout().then(function(){t.go("login"),e.isLoggedIn=!1})}}function mainController(e,t,o,r){var n=this;n.isNotLogin=!0,n.isLogin=!1,n.dropDown=!1,n.showDropdown=function(){0==n.dropDown?n.dropDown=!0:n.dropDown=!1},e.activeTab={},e.isLoggedIn=!1,e.$on("$stateChangeStart",function(t){o.getUserStatus().then(function(t){n.currentUser=t.data.user,n.currentUser&&(e.isLoggedIn=!0)})}),e.$on("$stateChangeSuccess",function(e){"/login"==r.path(),n.isNotLogin=!1,n.isLogin=!0})}function offerController(e,t,o,r,n,a){var s=this;s.currentUser={},e.activeTab={},t.getUserStatus().then(function(e){s.currentUser=e.data.user,o.get("/api/users/"+s.currentUser._id).success(function(e){s.currentUser=e,o.get("/api/crew/"+r.id).success(function(e){s.crew=e,s.isProducer=s.crew.production.by_._id===s.currentUser._id,s.isCrew=s.crew.production.by_._id!==s.currentUser._id,s.ready=!0})})}),s.addMessage=function(e){s.messageBox=document.getElementById("message-box"),s.message={content:e||s.newMessage},s.message.content&&o.post("/api/crew/"+s.crew._id+"/message?crew="+s.crew.to.username+"&producer="+s.crew.production.by_.username,s.message).success(function(e){s.crew.message=e,s.newMessage="",s.messageBox.focus(),a.track("Chat Message Sent",{user:s.currentUser.username})})},s.updateOfferStatus=function(e){s.offerUpdate=Object.assign({},s.crew),s.offerUpdate.offer.status=e,o.patch("/api/crew/"+r.id+"/status",s.offerUpdate).then(function(t){var o="";"Accepted"==e?(o="I accept your offer to work with you on "+s.crew.production.name+".",s.addMessage(o)):"Declined"==e&&(o="I respectfully decline your offer to work with you on "+s.crew.production.name+".",s.addMessage(o))})},s.compareDate=function(e){return e=new Date(e),e.setDate(e.getDate()+1),!!e&&new Date<e},console.log("Offer Status")}function otherProfileController(e,t,o,r,n){var a=this;a.modal={},a.modal.show=!1,a.currentUser={},e.activeTab={},e.activeTab.crewList=!0,n.getUserStatus().then(function(e){a.currentUser=e.data.user,t.get("/api/users/"+a.currentUser._id).success(function(e){a.currentUser=e,t.get("/api/users/"+o.id+"/profile").then(function(e){a.user=e.data,a.user.picture?a.profilePicture=a.user.picture:a.profilePicture="./img/profile_default.png",a.isPending=a.currentUser.pendingContacts.find(function(e){return e===a.user._id}),a.ready=!0})})}),a.updateContactStatus=function(e,r){t.patch("/api/users/updateContact?of="+o.id+"&status="+e).then(function(t){"approve"==e?a.modal.content="You have added "+r.first_name.capitalize()+" "+r.last_name.capitalize()+" as an approved contact.":a.modal.content="You have declined to add "+r.first_name.capitalize()+" "+r.last_name.capitalize()+" as an approved contact.",a.isPending=!1,a.showModal()},function(){a.modal.content="An error has occurred. Please try again.",a.showModal()})},a.compareDate=function(e){return e=new Date(e),e.setDate(e.getDate()+1),!!e&&new Date<e},a.showModal=function(){a.modal.show=!0},a.closeModal=function(){a.modal.show=!1},String.prototype.capitalize=function(){return this.charAt(0).toUpperCase()+this.slice(1)}}function postController(e,t,o,r,n,a,s){function i(e){if(e){var t=e.length;0==t?c.rows=4:t<75?c.rows=1:t>74&&t<150?c.rows=2:t>149&&t<225?c.rows=3:t>224&&t<300?c.rows=4:t>299&&t<375?c.rows=5:t>374&&t<425?c.rows=6:t>424&&(c.rows=7)}else c.rows=4}var c=this;c.currentUser={},c.editingState=!1,c.fileInput=document.getElementById("file-input"),c.modal={},c.showSaveButton=!0,a.file_changed=function(e){document.getElementById("profile-pic-preview").src=URL.createObjectURL(e.files[0]),c.showSaveButton=!1},e.activeTab={},e.activeTab.profile=!0,n.getUserStatus().then(function(e){t.get("/api/users/"+e.data.user._id+"/profile").success(function(e){c.currentUser=e,i(c.currentUser.bio);var t=[];e.offersReceived.forEach(function(e){"Accepted"===e.offer.status&&t.push(e.production)}),c.currentUser.picture?c.profilePicture=c.currentUser.picture+"?random="+Math.random():c.profilePicture="./img/profile_default.png",c.currentUser.allProductions=e.productions.concat(t),c.ready=!0})}),c.editUser=function(){t.patch("/api/users/"+c.currentUser._id,c.currentUser).success(function(e){}).error(function(e){c.modal.isFailure=!0,c.modal.content="An error has occurred. Please try again."}).finally(function(){1==c.editingState1?c.editingState1=!1:1==c.editingState2?c.editingState2=!1:1==c.editingState3?c.editingState3=!1:1==c.editingState4&&(c.editingState4=!1)})},c.openModal=function(){c.modal.show=!0},c.openModal2=function(){c.modal.show2=!0,c.showSaveButton=!0},c.closeModal=function(){c.modal.show=!1,c.modal.isSuccess=!1,c.modal.isFailure=!1},c.closeModal2=function(){c.modal.show2=!1},c.compareDate=function(e){return e=new Date(e),e.setDate(e.getDate()+1),!!e&&new Date<e},c.initUpload=function(){var e=document.getElementById("file-input").files;return file=e[0],file.randomName=c.currentUser._id+"."+file.name.split(".").pop(),null==file?alert("No file selected."):void c.getSignedRequest(file)},c.getSignedRequest=function(e){const t=new XMLHttpRequest;t.open("GET","/uploads/sign-s3?file-name="+e.randomName+"&file-type="+e.type),t.onreadystatechange=function(){if(4===t.readyState)if(200===t.status){const o=JSON.parse(t.responseText);c.avatarUrl=o.url,c.uploadFile(e,o.signedRequest,o.url),c.addAvatarToProfile(),s.track("Profile Picture Uploaded",{user:c.currentUser.username})}else alert("Could not get signed URL.")},t.send()},c.uploadFile=function(e,t,o){const r=new XMLHttpRequest;r.open("PUT",t),r.onreadystatechange=function(){4===r.readyState&&(200===r.status?document.getElementById("profile-picture").src=o+"?random="+Math.random():alert("Could not upload file."))},r.send(e)},c.addAvatarToProfile=function(){t.patch("/api/users/"+c.currentUser._id,{picture:c.avatarUrl}).then(function(e){c.profilePicture=e.data.picture+"?random="+Math.random(),c.closeModal2()})}}function productionController(e,t,o,r,n,a){var s=this;s.offers=[],s.currentUser={},e.activeTab={},e.activeTab.production=!0,s.notifModal={},s.editingState=!1,n.getUserStatus().then(function(e){s.currentUser=e.data.user,t.get("/api/users/"+s.currentUser._id+"/contacts").success(function(e){s.currentUser=e,t.get("/api/productions/"+o.id).success(function(e){s.production=e,s.isProducer=s.production.by_._id===s.currentUser._id,s.ready=!0})})}),s.editProduction=function(){t.patch("/api/productions/"+o.id,s.production).success(function(e){s.editingState=!1,e.crew=s.production.crew,s.production=e,s.notifModal.isSuccess=!0,s.notifModal.content="You have successfully updated your production."}).error(function(e){s.notifModal.isFailure=!0,s.notifModal.content="An error has occurred. Please try again."}).finally(function(){s.openNotifModal()})},s.deleteProduction=function(){t.delete("/api/productions/"+o.id).success(function(e){r.go("production-list")})},s.makeOffer=function(e,o){var r=s.offers[o];s.offer={offer:{status:"Pending",position:r.position,rate:r.rate,hours:r.hours}},t.patch("api/crew/"+e,s.offer).success(function(r){s.production.crew[o].offer.hours=r.offer.hours,s.production.crew[o].offer.position=r.offer.position,s.production.crew[o].offer.rate=r.offer.rate,s.production.crew[o].offer.status=r.offer.status,s.notifModal.isSuccess=!0,s.notifModal.content="You have successfully sent on offer to "+s.production.crew[o].to.username+".",s.message={content:"I would like to invite you to be part of my production team."},s.message.content&&t.post("/api/crew/"+e+"/message",s.message).success(function(e){}),a.track("Hire Clicked",{user:s.currentUser.username})}).error(function(e){s.notifModal.isFailure=!0,s.notifModal.content="An error has occurred. Please try again."}).finally(function(){s.openNotifModal()})},s.addToCrew=function(e){crewOffer={to:e,production:o.id},t.post("/api/crew/",crewOffer).success(function(e){s.production.crew=e,s.notifModal.isSuccess=!0,s.notifModal.content="You have successfully added a new crew member.",a.track("Add Crew Clicked",{user:s.currentUser.username})}).error(function(e){s.notifModal.isFailure=!0,s.notifModal.content="An error has occurred. Please try again."}).finally(function(){s.showModal=!1,s.openNotifModal()})},s.removeFromCrew=function(e,o){t.delete("/api/crew/"+e).then(function(t){t.data.success?(s.production.crew=s.production.crew.filter(function(t){return t._id.toString()!=e}),s.notifModal.isSuccess=!0,s.notifModal.content="You have successfully removed a crew member."):(s.notifModal.isFailure=!1,s.notifModal.content="An error has occurred. Please try again.")}).catch(function(e){s.notifModal.isFailure=!0,s.notifModal.content="An error has occurred. Please try again."}).finally(function(){s.openNotifModal()})},s.closeModal=function(e){"modal-container"===e.target.getAttribute("id")&&(s.selectedUserId=void 0,s.showModal=!1)},s.openModal=function(){s.showModal=!0},s.openNotifModal=function(){s.notifModal.show=!0},s.closeNotifModal=function(){s.notifModal.show=!1,s.notifModal.isSuccess=!1,s.notifModal.isFailure=!1},s.compareDate=function(e){return e=new Date(e),e.setDate(e.getDate()+1),!!e&&new Date<e},s.notifyCrew=function(){t.get("/api/productions/"+o.id+"/notify").success(function(e){s.notifModal.isSuccess=!0,s.notifModal.content="You have successfully sent an email notification to your crew members.",s.openNotifModal(),a.track("Notify Crew Clicked")})},s.addContact=function(){t.post("/api/users/addcontact",s.newContact).success(function(e){if(s.newContact.email="",s.newContact.first_name="",s.newContact.last_name="",a.track("Add Contact Clicked",{user:s.currentUser.username}),e)if(e.success){s.notifModal.isSuccess=!0;var t=e.data.username;s.notifModal.content="You have successfully added "+t+" to your crew list.",s.currentUser.contacts.push(e.data)}else e.newSuccess?(s.notifModal.isSuccess=!0,s.notifModal.content="We have sent an invitation to "+e.newEmail+". They will appear in your crew list once they accept."):(s.notifModal.isFailure=!0,s.notifModal.content=e.message);else s.notifModal.isSuccess=!0,s.notifModal.content="We have sent an invitation to "+s.newContact.email+". They will appear in your crew list when they accept."}).error(function(e){s.notifModal.isFailure=!0,s.notifModal.content="An error has occurred. Please try again."}).finally(function(){s.openNotifModal()})},s.openDeleteContactModal=function(e){s.contact=e,s.showDeleteContactModal=!0},s.closeDeleteContactModal=function(){s.showDeleteContactModal=!1},s.deleteContact=function(e){t.patch("/api/users/delete-contact",{contact:e,currentUser:s.currentUser}).success(function(e){s.currentUser.contacts=e.user.contacts})}}function productionListController(e,t,o,r,n,a){console.log("productionListController instantiated");var s=this;s.notifModal={},e.activeTab={},e.activeTab.production=!0,n.getUserStatus().then(function(e){t.get("/api/users/"+e.data.user._id+"/productions").success(function(e){s.currentUser=e;var t=[];e.offersReceived.forEach(function(e){"Accepted"===e.offer.status&&t.push(e.production)}),s.currentUser.allProductions=e.productions.concat(t),s.ready=!0,"producer"===s.currentUser.role&&s.updateMinDateTo()})});var i=new Date(Date.now());s.dateFrom=i,s.dateFrom.setHours(0),s.dateFrom.setMinutes(0),s.dateFrom.setSeconds(0),s.dateFrom.setMilliseconds(0),s.minDateFrom=i.getFullYear()+"-"+(i.getMonth()+1)+"-"+i.getDate(),s.updateMinDateTo=function(){var e=new Date(s.dateFrom);s.minDateTo=e.getFullYear()+"-"+(e.getMonth()+1)+"-"+e.getDate(),document.getElementById("prod-date-to").setAttribute("min",s.minDateTo),new Date(s.dateFrom)>new Date(s.dateTo)&&(s.dateTo=void 0,s.notifModal.isFailure=!0,s.notifModal.content="Please check the production dates!",s.notifModal.show=!0)},s.addProduction=function(){if(new Date(s.dateFrom)>new Date(s.dateTo))s.dateTo=void 0,s.notifModal.isFailure=!0,s.notifModal.content="Please check the production dates! Your production end date is before its start date",s.notifModal.show=!0;else{var e={from:new Date(s.dateFrom),to:new Date(s.dateTo),by_:s.currentUser,name:s.newProduction.name};t.post("/api/productions",e).success(function(e){s.currentUser.allProductions=s.currentUser.productions.concat(e),a.track("New Production Added",{user:s.currentUser.username,length:e.length})})}},s.deleteProduction=function(e,o){t.patch("/api/productions/"+o,{active:!1}).success(function(t){s.currentUser.allProductions=s.currentUser.allProductions.filter(function(e,t){return e._id.toString()!=o}),s.notifModal.isSuccess=!0,s.notifModal.content="You have successfully deleted "+e,a.track("Production Deleted",{user:s.currentUser.username})}).error(function(e){s.notifModal.isFailure=!0,s.notifModal.content="An error has occurred. Please try again."}).finally(function(){s.openNotifModal()})},s.openNotifModal=function(){s.notifModal.show=!0},s.closeNotifModal=function(){s.notifModal.show=!1,s.notifModal.isSuccess=!1,s.notifModal.isFailure=!1},s.compareDate=function(e){return e=new Date(e),e.setDate(e.getDate()+1),!!e&&new Date<e},s.openDeleteProductionModal=function(e,t,o){s.productionName=e,s.productionID=t,s.$index=o,console.log(s.productionName),console.log(s.productionID),console.log(s.$index),s.showDeleteProductionModal=!0},s.closeDeleteProductionModal=function(){s.showDeleteProductionModal=!1}}function registerController(e,t,o,r){var n=this;e.activeTab={},e.isLoggedIn?t.go("profile"):void 0===o.ur&&t.go("home",{reg:!0}),n.register=function(){n.error=!1,n.disabled=!0,r.register(n.registerForm,o.ur,o).then(function(){t.go("profile"),n.disabled=!1,n.registerForm={}}).catch(function(){n.error=!0,n.errorMessage="Something went wrong!",n.disabled=!1,n.registerForm.username="",n.registerForm.password=""})}}function resetPasswordController(e,t,o,r){console.log("resetPasswordController instantiated");var n=this;n.modalOpen=!1,r.checkToken(o.token).then(function(e){e.user||t.go("home")}),n.resetPassword=function(e){n.disabled=!0,r.resetPassword(o.token,e).then(function(e){n.modalOpen=!0})}}var myApp=angular.module("myApp",["ui.router","ui.bootstrap","analytics.mixpanel"]);myApp.config(["$stateProvider","$urlRouterProvider","$mixpanelProvider",function(e,t,o){o.apiKey("15cd4875d9c8b7a226829c8fcf5ce560"),t.otherwise("/profile"),e.state("home",{url:"/?reg",templateUrl:"templates/home.html",controller:"homeController as homeCtrl"}).state("login",{url:"/login?ur",templateUrl:"templates/login.html",controller:"loginController as loginCtrl"}).state("logout",{url:"/logout",templateUrl:"templates/logout.html",controller:"logoutController",restricted:!0}).state("register",{url:"/register?p&r&ur",templateUrl:"templates/register.html",controller:"registerController as registerCtrl"}).state("complete-registration",{url:"/complete-registration/:token",templateUrl:"templates/complete-registration.html",controller:"completeRegistrationController as compRegCtrl"}).state("forgot-password",{url:"/forgot-password",templateUrl:"templates/forgot-password.html",controller:"forgotPasswordController as forgotPWCtrl"}).state("reset-password",{url:"/reset-password/:token",templateUrl:"templates/reset-password.html",controller:"resetPasswordController as resetPWCtrl"}).state("crew-list",{url:"/crewlist",templateUrl:"templates/crewList.html",controller:"crewListController as crewListCtrl",restricted:!0}).state("production",{url:"/production/:id",templateUrl:"templates/production.html",controller:"productionController as productionCtrl",restricted:!0}).state("production-list",{url:"/productions",templateUrl:"templates/productionList.html",controller:"productionListController as productionListCtrl",restricted:!0}).state("profile",{url:"/profile",templateUrl:"templates/profile.html",controller:"postController as postCtrl",restricted:!0}).state("account-settings",{url:"/account-settings",templateUrl:"templates/account-settings.html",controller:"accountSettingController as accSetCtrl",restricted:!0}).state("otherProfile",{url:"/profile/:id",templateUrl:"templates/otherProfile.html",controller:"otherProfileController as otherProfileCtrl",restricted:!0}).state("offer",{url:"/offer/:id",templateUrl:"templates/offer.html",controller:"offerController as offerCtrl",restricted:!0})}]),myApp.run(["$rootScope","$location","$state","AuthService",function(e,t,o,r){e.$on("$stateChangeError",console.log.bind(console)),e.$on("$stateChangeStart",function(t,n,a,s,i){r.getUserStatus().then(function(){n.restricted&&!r.isLoggedIn()&&(e.returnToState=n.url,e.returnToStateParams=a.id,o.go("login"))})})}]),angular.module("myApp").factory("AuthService",["$q","$timeout","$http","$state",function(e,t,o,r){function n(){return!!m}function a(){return o.get("/user/status").success(function(e){m=!!e.status}).error(function(e){m=!1})}function s(t,r){var n=e.defer();return o.post("/user/login",{username:t,password:r}).success(function(e,t){200===t&&e.status?(m=!0,n.resolve()):(m=!1,n.reject())}).error(function(e){m=!1,n.reject()}),n.promise}function i(){var t=e.defer();return o.get("/user/logout").success(function(e){m=!1,t.resolve()}).error(function(e){m=!1,t.reject()}),t.promise}function c(t,r,n){var a=e.defer();if(n.p)var s="/user/register?addTo="+n.p;else if(n.r)var s="/user/register?requestTo="+n.r;else var s="/user/register";return console.log(s),o.post(s,{username:t.username,first_name:t.first_name,last_name:t.last_name,password:t.password,role:r}).success(function(e,t){200===t&&e.status?a.resolve():a.reject()}).error(function(e){a.reject()}),a.promise}function l(t){var r=e.defer();return o.post("/user/forgot-password",{email:t}).success(function(e,t){e.user===!1?r.resolve({message:"rejected"}):r.resolve({message:"resolved"})}).error(function(e){r.reject({message:"rejected"})}),r.promise}function u(t){var r=e.defer();return o.post("/user/check-token",{token:t}).success(function(e,t){if(200===t)r.resolve(e);else{r.reject()}}).error(function(e){m=!1,r.reject()}),r.promise}function d(t,r){var n=e.defer();return o.post("/user/reset/"+t,{password:r}).success(function(e,t){if(200===t)n.resolve(e);else{n.reject()}}).error(function(e){m=!1,n.reject()}),n.promise}function f(t){var r=e.defer();return o.post("/user/check-reg-token",{token:t}).success(function(e,t){if(200===t)r.resolve(e);else{r.reject()}}).error(function(e){m=!1,r.reject()}),r.promise}function p(t,r){var n=e.defer();return console.log("registerForm from services line 218"),console.log(r),o.patch("/user/compReg/"+t,{registerForm:r}).success(function(e,t){if(200===t)n.resolve(e);else{n.reject()}}).error(function(e){m=!1,n.reject()}),n.promise}var m=null;return{isLoggedIn:n,getUserStatus:a,login:s,logout:i,register:c,forgotPassword:l,checkToken:u,resetPassword:d,completeRegistration:p,checkCompRegToken:f}}]),angular.module("myApp").controller("accountSettingController",accountSettingController),accountSettingController.$inject=["$rootScope","$state","$stateParams","AuthService","$http"],angular.module("myApp").controller("completeRegistrationController",completeRegistrationController),completeRegistrationController.$inject=["$rootScope","$state","$stateParams","AuthService"],angular.module("myApp").controller("crewListController",crewListController),crewListController.$inject=["$rootScope","$http","$stateParams","$state","AuthService","$mixpanel"],angular.module("myApp").controller("forgotPasswordController",forgotPasswordController),forgotPasswordController.$inject=["$rootScope","$state","$stateParams","$http","AuthService"],angular.module("myApp").controller("homeController",homeController),homeController.$inject=["$rootScope","$state","$stateParams"],angular.module("myApp").controller("loginController",loginController),loginController.$inject=["$rootScope","$state","$stateParams","AuthService"],angular.module("myApp").controller("logoutController",logoutController),logoutController.$inject=["$rootScope","$state","AuthService"],angular.module("myApp").controller("mainController",mainController),mainController.$inject=["$rootScope","$state","AuthService","$location"],angular.module("myApp").controller("offerController",offerController),offerController.$inject=["$rootScope","AuthService","$http","$stateParams","$state","$mixpanel"],angular.module("myApp").controller("otherProfileController",otherProfileController),otherProfileController.$inject=["$rootScope","$http","$stateParams","$state","AuthService"],angular.module("myApp").controller("postController",postController),postController.$inject=["$rootScope","$http","$stateParams","$state","AuthService","$scope","$mixpanel"],angular.module("myApp").controller("productionController",productionController),productionController.$inject=["$rootScope","$http","$stateParams","$state","AuthService","$mixpanel"],angular.module("myApp").controller("productionListController",productionListController),productionListController.$inject=["$rootScope","$http","$stateParams","$state","AuthService","$mixpanel"],angular.module("myApp").controller("registerController",registerController),registerController.$inject=["$rootScope","$state","$stateParams","AuthService"],angular.module("myApp").controller("resetPasswordController",resetPasswordController),resetPasswordController.$inject=["$rootScope","$state","$stateParams","AuthService"];