function crewListController(e,t,o,r,n){var i=this;i.showModal=!1,i.notifModal={},e.activeTab={},e.activeTab.crewList=!0,n.getUserStatus().then(function(e){t.get("/api/users/"+e.data.user._id+"/contacts").success(function(e){i.currentUser=e,"crew"===i.currentUser.role&&r.go("profile"),i.inviteUrl="http://myproducer.io/#/register?r="+e._id,i.ready=!0})}),i.addContact=function(){t.post("/api/users/addcontact",i.newContact).success(function(e){if(i.newContact.email="",e)if(e.success){i.notifModal.isSuccess=!0;var t=e.data.username;i.notifModal.content="You have successfully added "+t+" to your crew list.",i.currentUser.contacts.push(e.data)}else i.notifModal.isFailure=!0,i.notifModal.content=e.message;else i.notifModal.isSuccess=!0,i.notifModal.content="We have sent an invitation to "+i.newContact.email+". They will appear in your crew list when they accept."}).error(function(e){i.notifModal.isFailure=!0,i.notifModal.content="An error has occurred. Please try again."}).finally(function(){i.openNotifModal()})},i.closeModal=function(e){"modal-container"===e.target.getAttribute("id")&&(i.selectedUserId=void 0,i.showModal=!1)},i.openModal=function(){i.showModal=!0},i.handleAddToButton=function(e,t){i.selectedUserId=e,i.selectedUsername=t,i.openModal()},i.addCrewToProduction=function(e,o){var r={to:i.selectedUserId,production:e};t.post("/api/crew/",r).success(function(e){i.notifModal.isSuccess=!0,i.notifModal.content="You have successfully added "+i.selectedUsername+" to "+o+"."}).error(function(e){i.notifModal.isFailure=!0,i.notifModal.content="An error has occurred. Please try again."}).finally(function(){i.openNotifModal()})},i.openNotifModal=function(){i.notifModal.show=!0},i.closeNotifModal=function(){i.notifModal.show=!1,i.notifModal.isSuccess=!1,i.notifModal.isFaiure=!1}}function homeController(e,t,o){var r=this;e.isLoggedIn&&t.go("profile"),o.reg&&(r.registerIntent=!0)}function loginController(e,t,o,r){var n=this;e.activeTab={},n.userRole=o.ur,e.isLoggedIn&&t.go("profile"),n.login=function(){n.error=!1,n.disabled=!0,r.login(n.loginForm.username,n.loginForm.password).then(function(){"/offer/:id"===e.returnToState?t.go("offer",{id:e.returnToStateParams}):"/production/:id"===e.returnToState?t.go("production",{id:e.returnToStateParams}):t.go("profile"),n.disabled=!1,n.loginForm={}}).catch(function(){n.error=!0,n.errorMessage="Invalid email and/or password",n.disabled=!1,n.loginForm={}})}}function logoutController(e,t,o){var r=this;e.activeTab={},r.logout=function(){o.logout().then(function(){t.go("login"),e.isLoggedIn=!1})}}function mainController(e,t,o){var r=this;e.activeTab={},e.isLoggedIn=!1,e.$on("$stateChangeStart",function(t){o.getUserStatus().then(function(t){r.currentUser=t.data.user,r.currentUser&&(e.isLoggedIn=!0)})})}function offerController(e,t,o,r,n){var i=this;i.currentUser={},e.activeTab={},t.getUserStatus().then(function(e){i.currentUser=e.data.user,o.get("/api/users/"+i.currentUser._id).success(function(e){i.currentUser=e,o.get("/api/crew/"+r.id).success(function(e){i.crew=e,i.isProducer=i.crew.production.by_._id===i.currentUser._id,i.isCrew=i.crew.production.by_._id!==i.currentUser._id,i.ready=!0})})}),i.addMessage=function(e){i.message={content:e||i.newMessage},i.message.content&&o.post("/api/crew/"+i.crew._id+"/message?crew="+i.crew.to.username+"&producer="+i.crew.production.by_.username,i.message).success(function(e){i.crew.message=e,i.newMessage=""})},i.updateOfferStatus=function(e){i.offerUpdate=Object.assign({},i.crew),i.offerUpdate.offer.status=e,o.patch("/api/crew/"+r.id+"/status",i.offerUpdate).then(function(t){var o="";"Accepted"==e?(o="I accept your offer to work with you on "+i.crew.production.name+".",i.addMessage(o)):"Declined"==e&&(o="I respectfully decline your offer to work with you on "+i.crew.production.name+".",i.addMessage(o))})},i.compareDate=function(e){return e=new Date(e),e.setDate(e.getDate()+1),!!e&&new Date<e}}function otherProfileController(e,t,o,r,n){var i=this;i.modal={},i.modal.show=!1,i.currentUser={},e.activeTab={},n.getUserStatus().then(function(e){i.currentUser=e.data.user,t.get("/api/users/"+i.currentUser._id).success(function(e){i.currentUser=e,t.get("/api/users/"+o.id+"/profile").then(function(e){i.user=e.data,i.isPending=i.currentUser.pendingContacts.find(function(e){return e===i.user._id}),i.ready=!0})})}),i.updateContactStatus=function(e){t.patch("/api/users/updateContact?of="+o.id+"&status="+e).then(function(t){i.modal.content="You have "+e+"d offer to join your crew list.",i.showModal()},function(){i.modal.content="An error has occurred. Please try again.",i.showModal()})},i.compareDate=function(e){return e=new Date(e),e.setDate(e.getDate()+1),!!e&&new Date<e},i.showModal=function(){i.modal.show=!0},i.closeModal=function(){i.modal.show=!1}}function postController(e,t,o,r,n){var i=this;i.currentUser={},i.editingState=!1,i.modal={},i.modal.show=!1,e.activeTab={},e.activeTab.profile=!0,n.getUserStatus().then(function(e){t.get("/api/users/"+e.data.user._id+"/profile").success(function(e){i.currentUser=e;var t=[];e.offersReceived.forEach(function(e){"Accepted"===e.offer.status&&t.push(e.production)}),i.currentUser.allProductions=e.productions.concat(t),i.ready=!0})}),i.editUser=function(){t.patch("/api/users/"+i.currentUser._id,i.currentUser).success(function(e){e.productions=i.currentUser.productions,e.offersReceived=i.currentUser.offersReceived,i.currentUser=e,i.modal.isSuccess=!0,i.modal.content="You have successfully updated your profile."}).error(function(e){i.modal.isFailure=!0,i.modal.content="An error has occurred. Please try again."}).finally(function(){i.editingState=!1,i.openModal()})},i.openModal=function(){i.modal.show=!0},i.closeModal=function(){i.modal.show=!1,i.modal.isSuccess=!1,i.modal.isFailure=!1},i.compareDate=function(e){return e=new Date(e),e.setDate(e.getDate()+1),!!e&&new Date<e}}function productionController(e,t,o,r,n){var i=this;i.offers=[],i.currentUser={},e.activeTab={},e.activeTab.production=!0,i.notifModal={},i.editingState=!1,n.getUserStatus().then(function(e){i.currentUser=e.data.user,t.get("/api/users/"+i.currentUser._id+"/contacts").success(function(e){i.currentUser=e,t.get("/api/productions/"+o.id).success(function(e){i.production=e,i.isProducer=i.production.by_._id===i.currentUser._id,i.ready=!0})})}),i.editProduction=function(){t.patch("/api/productions/"+o.id,i.production).success(function(e){i.editingState=!1,e.crew=i.production.crew,i.production=e,i.notifModal.isSuccess=!0,i.notifModal.content="You have successfully updated your production."}).error(function(e){i.notifModal.isFailure=!0,i.notifModal.content="An error has occurred. Please try again."}).finally(function(){i.openNotifModal()})},i.deleteProduction=function(){t.delete("/api/productions/"+o.id).success(function(e){r.go("production-list")})},i.makeOffer=function(e,o){var r=i.offers[o];i.offer={offer:{status:"Pending",position:r.position,rate:r.rate,hours:r.hours}},t.patch("api/crew/"+e,i.offer).success(function(r){i.production.crew[o].offer.hours=r.offer.hours,i.production.crew[o].offer.position=r.offer.position,i.production.crew[o].offer.rate=r.offer.rate,i.production.crew[o].offer.status=r.offer.status,i.notifModal.isSuccess=!0,i.notifModal.content="You have successfully sent on offer to "+i.production.crew[o].to.username+".",i.message={content:"I would like to invite you to be part of my production team."},i.message.content&&t.post("/api/crew/"+e+"/message",i.message).success(function(e){})}).error(function(e){i.notifModal.isFailure=!0,i.notifModal.content="An error has occurred. Please try again."}).finally(function(){i.openNotifModal()})},i.addToCrew=function(e){crewOffer={to:e,production:o.id},t.post("/api/crew/",crewOffer).success(function(e){i.production.crew=e,i.notifModal.isSuccess=!0,i.notifModal.content="You have successfully added a new crew member."}).error(function(e){i.notifModal.isFailure=!0,i.notifModal.content="An error has occurred. Please try again."}).finally(function(){i.showModal=!1,i.openNotifModal()})},i.removeFromCrew=function(e,o){t.delete("/api/crew/"+e).then(function(t){t.data.success?(i.production.crew=i.production.crew.filter(function(t){return t._id.toString()!=e}),i.notifModal.isSuccess=!0,i.notifModal.content="You have successfully removed a crew member."):(i.notifModal.isFailure=!1,i.notifModal.content="An error has occurred. Please try again.")}).catch(function(e){i.notifModal.isFailure=!0,i.notifModal.content="An error has occurred. Please try again."}).finally(function(){i.openNotifModal()})},i.closeModal=function(e){"modal-container"===e.target.getAttribute("id")&&(i.selectedUserId=void 0,i.showModal=!1)},i.openModal=function(){i.showModal=!0},i.openNotifModal=function(){i.notifModal.show=!0},i.closeNotifModal=function(){i.notifModal.show=!1,i.notifModal.isSuccess=!1,i.notifModal.isFailure=!1},i.compareDate=function(e){return e=new Date(e),e.setDate(e.getDate()+1),!!e&&new Date<e},i.notifyCrew=function(){t.get("/api/productions/"+o.id+"/notify").success(function(e){i.notifModal.isSuccess=!0,i.notifModal.content="You have successfully sent an email notification to your crew members.",i.openNotifModal()})}}function productionListController(e,t,o,r,n){var i=this;i.notifModal={},e.activeTab={},e.activeTab.production=!0,n.getUserStatus().then(function(e){t.get("/api/users/"+e.data.user._id+"/productions").success(function(e){i.currentUser=e;var t=[];e.offersReceived.forEach(function(e){"Accepted"===e.offer.status&&t.push(e.production)}),i.currentUser.allProductions=e.productions.concat(t),i.ready=!0,"producer"===i.currentUser.role&&i.updateMinDateTo()})});var s=new Date(Date.now());i.dateFrom=s,i.dateFrom.setHours(0),i.dateFrom.setMinutes(0),i.dateFrom.setSeconds(0),i.dateFrom.setMilliseconds(0),i.minDateFrom=s.getFullYear()+"-"+(s.getMonth()+1)+"-"+s.getDate(),i.updateMinDateTo=function(){var e=new Date(i.dateFrom);i.minDateTo=e.getFullYear()+"-"+(e.getMonth()+1)+"-"+e.getDate(),document.getElementById("prod-date-to").setAttribute("min",i.minDateTo),new Date(i.dateFrom)>new Date(i.dateTo)&&(i.dateTo=void 0,i.notifModal.isFailure=!0,i.notifModal.content="Please check date!",i.notifModal.show=!0)},i.addProduction=function(){var e={from:new Date(i.dateFrom),to:new Date(i.dateTo),by_:i.currentUser,name:i.newProduction.name};t.post("/api/productions",e).success(function(e){i.currentUser.allProductions=i.currentUser.productions.concat(e)})},i.deleteProduction=function(e,o){confirm("Are you sure you want to delete this production?")&&t.patch("/api/productions/"+o,{active:!1}).success(function(t){i.currentUser.allProductions=i.currentUser.allProductions.filter(function(e,t){return e._id.toString()!=o}),i.notifModal.isSuccess=!0,i.notifModal.content="You have successfully deleted "+e}).error(function(e){i.notifModal.isFailure=!0,i.notifModal.content="An error has occurred. Please try again."}).finally(function(){i.openNotifModal()})},i.openNotifModal=function(){i.notifModal.show=!0},i.closeNotifModal=function(){i.notifModal.show=!1,i.notifModal.isSuccess=!1,i.notifModal.isFailure=!1},i.compareDate=function(e){return e=new Date(e),e.setDate(e.getDate()+1),!!e&&new Date<e}}function registerController(e,t,o,r){var n=this;e.activeTab={},e.isLoggedIn?t.go("profile"):void 0===o.ur&&t.go("home",{reg:!0}),n.register=function(){n.error=!1,n.disabled=!0,r.register(n.registerForm,o.ur,o).then(function(){t.go("profile"),n.disabled=!1,n.registerForm={}}).catch(function(){n.error=!0,n.errorMessage="Something went wrong!",n.disabled=!1,n.registerForm.username="",n.registerForm.password=""})}}var myApp=angular.module("myApp",["ui.router"]);myApp.config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/profile"),e.state("home",{url:"/?reg",templateUrl:"templates/home.html",controller:"homeController as homeCtrl"}).state("login",{url:"/login?ur",templateUrl:"templates/login.html",controller:"loginController as loginCtrl"}).state("logout",{url:"/logout",templateUrl:"templates/logout.html",controller:"logoutController",restricted:!0}).state("register",{url:"/register?p&r&ur",templateUrl:"templates/register.html",controller:"registerController as registerCtrl"}).state("crew-list",{url:"/crewlist",templateUrl:"templates/crewList.html",controller:"crewListController as crewListCtrl",restricted:!0}).state("production",{url:"/production/:id",templateUrl:"templates/production.html",controller:"productionController as productionCtrl",restricted:!0}).state("production-list",{url:"/productions",templateUrl:"templates/productionList.html",controller:"productionListController as productionListCtrl",restricted:!0}).state("profile",{url:"/profile",templateUrl:"templates/profile.html",controller:"postController as postCtrl",restricted:!0}).state("otherProfile",{url:"/profile/:id",templateUrl:"templates/otherProfile.html",controller:"otherProfileController as otherProfileCtrl",restricted:!0}).state("offer",{url:"/offer/:id",templateUrl:"templates/offer.html",controller:"offerController as offerCtrl",restricted:!0})}]),myApp.run(["$rootScope","$location","$state","AuthService",function(e,t,o,r){e.$on("$stateChangeError",console.log.bind(console)),e.$on("$stateChangeStart",function(t,n,i,s,a){r.getUserStatus().then(function(){n.restricted&&!r.isLoggedIn()&&(e.returnToState=n.url,e.returnToStateParams=i.id,o.go("login"))})})}]),angular.module("myApp").factory("AuthService",["$q","$timeout","$http",function(e,t,o){function r(){return!!c}function n(){return o.get("/user/status").success(function(e){c=!!e.status}).error(function(e){c=!1})}function i(t,r){var n=e.defer();return o.post("/user/login",{username:t,password:r}).success(function(e,t){200===t&&e.status?(c=!0,n.resolve()):(c=!1,n.reject())}).error(function(e){c=!1,n.reject()}),n.promise}function s(){var t=e.defer();return o.get("/user/logout").success(function(e){c=!1,t.resolve()}).error(function(e){c=!1,t.reject()}),t.promise}function a(t,r,n){var i=e.defer();if(n.p)var s="/user/register?addTo="+n.p;else if(n.r)var s="/user/register?requestTo="+n.r;else var s="/user/register";return console.log(s),o.post(s,{username:t.username,first_name:t.first_name,last_name:t.last_name,password:t.password,role:r}).success(function(e,t){200===t&&e.status?i.resolve():i.reject()}).error(function(e){i.reject()}),i.promise}var c=null;return{isLoggedIn:r,getUserStatus:n,login:i,logout:s,register:a}}]),angular.module("myApp").controller("crewListController",crewListController),crewListController.$inject=["$rootScope","$http","$stateParams","$state","AuthService"],angular.module("myApp").controller("homeController",homeController),homeController.$inject=["$rootScope","$state","$stateParams"],angular.module("myApp").controller("loginController",loginController),loginController.$inject=["$rootScope","$state","$stateParams","AuthService"],angular.module("myApp").controller("logoutController",logoutController),logoutController.$inject=["$rootScope","$state","AuthService"],angular.module("myApp").controller("mainController",mainController),mainController.$inject=["$rootScope","$state","AuthService"],angular.module("myApp").controller("offerController",offerController),offerController.$inject=["$rootScope","AuthService","$http","$stateParams","$state"],angular.module("myApp").controller("otherProfileController",otherProfileController),otherProfileController.$inject=["$rootScope","$http","$stateParams","$state","AuthService"],angular.module("myApp").controller("postController",postController),postController.$inject=["$rootScope","$http","$stateParams","$state","AuthService"],angular.module("myApp").controller("productionController",productionController),productionController.$inject=["$rootScope","$http","$stateParams","$state","AuthService"],angular.module("myApp").controller("productionListController",productionListController),productionListController.$inject=["$rootScope","$http","$stateParams","$state","AuthService"],angular.module("myApp").controller("registerController",registerController),registerController.$inject=["$rootScope","$state","$stateParams","AuthService"];