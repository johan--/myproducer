function crewListController(e,o,t,r,n,s){var a=this;a.showModal=!1,a.notifModal={},e.activeTab={},e.activeTab.crewList=!0,n.getUserStatus().then(function(e){o.get("/api/users/"+e.data.user._id+"/contacts").success(function(e){a.currentUser=e,"crew"===a.currentUser.role&&r.go("profile"),a.inviteUrl="http://myproducer.io/#/register?r="+e._id+"&ur=crew",a.ready=!0})}),a.addContact=function(){o.post("/api/users/addcontact",a.newContact).success(function(e){if(a.newContact.email="",s.track("Add Contact Clicked",{user:a.currentUser.username}),e)if(e.success){a.notifModal.isSuccess=!0;var o=e.data.username;a.notifModal.content="You have successfully added "+o+" to your crew list.",a.currentUser.contacts.push(e.data)}else e.newSuccess?(a.notifModal.isSuccess=!0,a.notifModal.content="We have sent an invitation to "+e.newEmail+". They will appear in your crew list once they accept."):(a.notifModal.isFailure=!0,a.notifModal.content=e.message);else a.notifModal.isSuccess=!0,a.notifModal.content="We have sent an invitation to "+a.newContact.email+". They will appear in your crew list when they accept."}).error(function(e){a.notifModal.isFailure=!0,a.notifModal.content="An error has occurred. Please try again."}).finally(function(){a.openNotifModal()})},a.closeModal=function(e){"modal-container"===e.target.getAttribute("id")&&(a.selectedUserId=void 0,a.showModal=!1)},a.openModal=function(){a.showModal=!0},a.handleAddToButton=function(e,o){a.selectedUserId=e,a.selectedUsername=o,a.openModal()},a.addCrewToProduction=function(e,t){var r={to:a.selectedUserId,production:e};o.post("/api/crew/",r).success(function(e){a.notifModal.isSuccess=!0,a.notifModal.content="You have successfully added "+a.selectedUsername+" to "+t+"."}).error(function(e){a.notifModal.isFailure=!0,a.notifModal.content="An error has occurred. Please try again."}).finally(function(){a.openNotifModal()})},a.openNotifModal=function(){a.notifModal.show=!0},a.closeNotifModal=function(){a.notifModal.show=!1,a.notifModal.isSuccess=!1,a.notifModal.isFaiure=!1}}function forgotPasswordController(e,o,t,r,n){console.log("forgotPasswordController instantiated");var s=this;s.modalOpen=!1,s.modal2Open=!1,s.forgot=function(e){s.disabled=!0,n.forgotPassword(e).then(function(e){"resolved"==e.message?s.modalOpen=!0:(s.modal2Open=!0,s.disabled=!1)})}}function homeController(e,o,t){var r=this;e.isLoggedIn&&o.go("profile"),t.reg&&(r.registerIntent=!0)}function loginController(e,o,t,r){var n=this;e.activeTab={},n.userRole=t.ur,e.isLoggedIn&&o.go("profile"),n.login=function(){n.error=!1,n.disabled=!0,r.login(n.loginForm.username,n.loginForm.password).then(function(){"/offer/:id"===e.returnToState?o.go("offer",{id:e.returnToStateParams}):"/production/:id"===e.returnToState?o.go("production",{id:e.returnToStateParams}):o.go("profile"),n.disabled=!1,n.loginForm={}}).catch(function(){n.error=!0,n.errorMessage="Invalid email and/or password",n.disabled=!1,n.loginForm={}})}}function logoutController(e,o,t){var r=this;e.activeTab={},r.logout=function(){t.logout().then(function(){o.go("login"),e.isLoggedIn=!1})}}function mainController(e,o,t,r){var n=this;n.isNotLogin=!0,n.isLogin=!1,n.dropDown=!1,n.showDropdown=function(){0==n.dropDown?n.dropDown=!0:n.dropDown=!1},e.activeTab={},e.isLoggedIn=!1,e.$on("$stateChangeStart",function(o){t.getUserStatus().then(function(o){n.currentUser=o.data.user,n.currentUser&&(e.isLoggedIn=!0)})}),e.$on("$stateChangeSuccess",function(e){"/login"==r.path(),n.isNotLogin=!1,n.isLogin=!0})}function offerController(e,o,t,r,n,s){var a=this;a.currentUser={},e.activeTab={},o.getUserStatus().then(function(e){a.currentUser=e.data.user,t.get("/api/users/"+a.currentUser._id).success(function(e){a.currentUser=e,t.get("/api/crew/"+r.id).success(function(e){a.crew=e,a.isProducer=a.crew.production.by_._id===a.currentUser._id,a.isCrew=a.crew.production.by_._id!==a.currentUser._id,a.ready=!0})})}),a.addMessage=function(e){a.message={content:e||a.newMessage},a.message.content&&t.post("/api/crew/"+a.crew._id+"/message?crew="+a.crew.to.username+"&producer="+a.crew.production.by_.username,a.message).success(function(e){a.crew.message=e,a.newMessage="",s.track("Chat Message Sent",{user:a.currentUser.username})})},a.updateOfferStatus=function(e){a.offerUpdate=Object.assign({},a.crew),a.offerUpdate.offer.status=e,t.patch("/api/crew/"+r.id+"/status",a.offerUpdate).then(function(o){var t="";"Accepted"==e?(t="I accept your offer to work with you on "+a.crew.production.name+".",a.addMessage(t)):"Declined"==e&&(t="I respectfully decline your offer to work with you on "+a.crew.production.name+".",a.addMessage(t))})},a.compareDate=function(e){return e=new Date(e),e.setDate(e.getDate()+1),!!e&&new Date<e}}function otherProfileController(e,o,t,r,n){var s=this;s.modal={},s.modal.show=!1,s.currentUser={},e.activeTab={},n.getUserStatus().then(function(e){s.currentUser=e.data.user,o.get("/api/users/"+s.currentUser._id).success(function(e){s.currentUser=e,o.get("/api/users/"+t.id+"/profile").then(function(e){s.user=e.data,s.isPending=s.currentUser.pendingContacts.find(function(e){return e===s.user._id}),s.ready=!0})})}),s.updateContactStatus=function(e){o.patch("/api/users/updateContact?of="+t.id+"&status="+e).then(function(o){s.modal.content="You have "+e+"d offer to join your crew list.",s.showModal()},function(){s.modal.content="An error has occurred. Please try again.",s.showModal()})},s.compareDate=function(e){return e=new Date(e),e.setDate(e.getDate()+1),!!e&&new Date<e},s.showModal=function(){s.modal.show=!0},s.closeModal=function(){s.modal.show=!1}}function postController(e,o,t,r,n){var s=this;s.currentUser={},s.editingState=!1,s.modal={},s.modal.show=!1,e.activeTab={},e.activeTab.profile=!0,n.getUserStatus().then(function(e){o.get("/api/users/"+e.data.user._id+"/profile").success(function(e){s.currentUser=e;var o=[];e.offersReceived.forEach(function(e){"Accepted"===e.offer.status&&o.push(e.production)}),s.currentUser.allProductions=e.productions.concat(o),s.ready=!0})}),s.editUser=function(){o.patch("/api/users/"+s.currentUser._id,s.currentUser).success(function(e){e.productions=s.currentUser.productions,e.offersReceived=s.currentUser.offersReceived,s.currentUser=e,s.modal.isSuccess=!0,s.modal.content="You have successfully updated your profile."}).error(function(e){s.modal.isFailure=!0,s.modal.content="An error has occurred. Please try again."}).finally(function(){s.editingState=!1,s.openModal()})},s.openModal=function(){s.modal.show=!0},s.closeModal=function(){s.modal.show=!1,s.modal.isSuccess=!1,s.modal.isFailure=!1,r.reload()},s.compareDate=function(e){return e=new Date(e),e.setDate(e.getDate()+1),!!e&&new Date<e}}function productionController(e,o,t,r,n,s){var a=this;a.offers=[],a.currentUser={},e.activeTab={},e.activeTab.production=!0,a.notifModal={},a.editingState=!1,n.getUserStatus().then(function(e){a.currentUser=e.data.user,o.get("/api/users/"+a.currentUser._id+"/contacts").success(function(e){a.currentUser=e,o.get("/api/productions/"+t.id).success(function(e){a.production=e,a.isProducer=a.production.by_._id===a.currentUser._id,a.ready=!0})})}),a.editProduction=function(){o.patch("/api/productions/"+t.id,a.production).success(function(e){a.editingState=!1,e.crew=a.production.crew,a.production=e,a.notifModal.isSuccess=!0,a.notifModal.content="You have successfully updated your production."}).error(function(e){a.notifModal.isFailure=!0,a.notifModal.content="An error has occurred. Please try again."}).finally(function(){a.openNotifModal()})},a.deleteProduction=function(){o.delete("/api/productions/"+t.id).success(function(e){r.go("production-list")})},a.makeOffer=function(e,t){var r=a.offers[t];a.offer={offer:{status:"Pending",position:r.position,rate:r.rate,hours:r.hours}},o.patch("api/crew/"+e,a.offer).success(function(r){a.production.crew[t].offer.hours=r.offer.hours,a.production.crew[t].offer.position=r.offer.position,a.production.crew[t].offer.rate=r.offer.rate,a.production.crew[t].offer.status=r.offer.status,a.notifModal.isSuccess=!0,a.notifModal.content="You have successfully sent on offer to "+a.production.crew[t].to.username+".",a.message={content:"I would like to invite you to be part of my production team."},a.message.content&&o.post("/api/crew/"+e+"/message",a.message).success(function(e){}),s.track("Hire Clicked",{user:a.currentUser.username})}).error(function(e){a.notifModal.isFailure=!0,a.notifModal.content="An error has occurred. Please try again."}).finally(function(){a.openNotifModal()})},a.addToCrew=function(e){crewOffer={to:e,production:t.id},o.post("/api/crew/",crewOffer).success(function(e){a.production.crew=e,a.notifModal.isSuccess=!0,a.notifModal.content="You have successfully added a new crew member.",s.track("Add Crew Clicked",{user:a.currentUser.username})}).error(function(e){a.notifModal.isFailure=!0,a.notifModal.content="An error has occurred. Please try again."}).finally(function(){a.showModal=!1,a.openNotifModal()})},a.removeFromCrew=function(e,t){o.delete("/api/crew/"+e).then(function(o){o.data.success?(a.production.crew=a.production.crew.filter(function(o){return o._id.toString()!=e}),a.notifModal.isSuccess=!0,a.notifModal.content="You have successfully removed a crew member."):(a.notifModal.isFailure=!1,a.notifModal.content="An error has occurred. Please try again.")}).catch(function(e){a.notifModal.isFailure=!0,a.notifModal.content="An error has occurred. Please try again."}).finally(function(){a.openNotifModal()})},a.closeModal=function(e){"modal-container"===e.target.getAttribute("id")&&(a.selectedUserId=void 0,a.showModal=!1)},a.openModal=function(){a.showModal=!0},a.openNotifModal=function(){a.notifModal.show=!0},a.closeNotifModal=function(){a.notifModal.show=!1,a.notifModal.isSuccess=!1,a.notifModal.isFailure=!1},a.compareDate=function(e){return e=new Date(e),e.setDate(e.getDate()+1),!!e&&new Date<e},a.notifyCrew=function(){o.get("/api/productions/"+t.id+"/notify").success(function(e){a.notifModal.isSuccess=!0,a.notifModal.content="You have successfully sent an email notification to your crew members.",a.openNotifModal(),s.track("Notify Crew Clicked")})}}function productionListController(e,o,t,r,n,s){var a=this;a.notifModal={},e.activeTab={},e.activeTab.production=!0,n.getUserStatus().then(function(e){o.get("/api/users/"+e.data.user._id+"/productions").success(function(e){a.currentUser=e;var o=[];e.offersReceived.forEach(function(e){"Accepted"===e.offer.status&&o.push(e.production)}),a.currentUser.allProductions=e.productions.concat(o),a.ready=!0,"producer"===a.currentUser.role&&a.updateMinDateTo()})});var i=new Date(Date.now());a.dateFrom=i,a.dateFrom.setHours(0),a.dateFrom.setMinutes(0),a.dateFrom.setSeconds(0),a.dateFrom.setMilliseconds(0),a.minDateFrom=i.getFullYear()+"-"+(i.getMonth()+1)+"-"+i.getDate(),a.updateMinDateTo=function(){var e=new Date(a.dateFrom);a.minDateTo=e.getFullYear()+"-"+(e.getMonth()+1)+"-"+e.getDate(),document.getElementById("prod-date-to").setAttribute("min",a.minDateTo),new Date(a.dateFrom)>new Date(a.dateTo)&&(a.dateTo=void 0,a.notifModal.isFailure=!0,a.notifModal.content="Please check the production dates!",a.notifModal.show=!0)},a.addProduction=function(){if(new Date(a.dateFrom)>new Date(a.dateTo))a.dateTo=void 0,a.notifModal.isFailure=!0,a.notifModal.content="Please check the production dates! Your production end date is before its start date",a.notifModal.show=!0;else{var e={from:new Date(a.dateFrom),to:new Date(a.dateTo),by_:a.currentUser,name:a.newProduction.name};o.post("/api/productions",e).success(function(e){a.currentUser.allProductions=a.currentUser.productions.concat(e),s.track("New Production Added",{user:a.currentUser.username})})}},a.deleteProduction=function(e,t){confirm("Are you sure you want to delete this production?")&&o.patch("/api/productions/"+t,{active:!1}).success(function(o){a.currentUser.allProductions=a.currentUser.allProductions.filter(function(e,o){return e._id.toString()!=t}),a.notifModal.isSuccess=!0,a.notifModal.content="You have successfully deleted "+e,s.track("Production Deleted",{user:a.currentUser.username})}).error(function(e){a.notifModal.isFailure=!0,a.notifModal.content="An error has occurred. Please try again."}).finally(function(){a.openNotifModal()})},a.openNotifModal=function(){a.notifModal.show=!0},a.closeNotifModal=function(){a.notifModal.show=!1,a.notifModal.isSuccess=!1,a.notifModal.isFailure=!1},a.compareDate=function(e){return e=new Date(e),e.setDate(e.getDate()+1),!!e&&new Date<e}}function registerController(e,o,t,r){var n=this;e.activeTab={},e.isLoggedIn?o.go("profile"):void 0===t.ur&&o.go("home",{reg:!0}),n.register=function(){n.error=!1,n.disabled=!0,r.register(n.registerForm,t.ur,t).then(function(){o.go("profile"),n.disabled=!1,n.registerForm={}}).catch(function(){n.error=!0,n.errorMessage="Something went wrong!",n.disabled=!1,n.registerForm.username="",n.registerForm.password=""})}}function resetPasswordController(e,o,t,r){console.log("resetPasswordController instantiated");var n=this;n.modalOpen=!1,r.checkToken(t.token).then(function(e){e.user||o.go("home")}),n.resetPassword=function(e){n.disabled=!0,r.resetPassword(t.token,e).then(function(e){n.modalOpen=!0})}}var myApp=angular.module("myApp",["ui.router","ui.bootstrap","analytics.mixpanel"]);myApp.config(["$stateProvider","$urlRouterProvider","$mixpanelProvider",function(e,o,t){t.apiKey("15cd4875d9c8b7a226829c8fcf5ce560"),o.otherwise("/profile"),e.state("home",{url:"/?reg",templateUrl:"templates/home.html",controller:"homeController as homeCtrl"}).state("login",{url:"/login?ur",templateUrl:"templates/login.html",controller:"loginController as loginCtrl"}).state("logout",{url:"/logout",templateUrl:"templates/logout.html",controller:"logoutController",restricted:!0}).state("register",{url:"/register?p&r&ur",templateUrl:"templates/register.html",controller:"registerController as registerCtrl"}).state("forgot-password",{url:"/forgot-password",templateUrl:"templates/forgot-password.html",controller:"forgotPasswordController as forgotPWCtrl"}).state("reset-password",{url:"/reset-password/:token",templateUrl:"templates/reset-password.html",controller:"resetPasswordController as resetPWCtrl"}).state("crew-list",{url:"/crewlist",templateUrl:"templates/crewList.html",controller:"crewListController as crewListCtrl",restricted:!0}).state("production",{url:"/production/:id",templateUrl:"templates/production.html",controller:"productionController as productionCtrl",restricted:!0}).state("production-list",{url:"/productions",templateUrl:"templates/productionList.html",controller:"productionListController as productionListCtrl",restricted:!0}).state("profile",{url:"/profile",templateUrl:"templates/profile.html",controller:"postController as postCtrl",restricted:!0}).state("otherProfile",{url:"/profile/:id",templateUrl:"templates/otherProfile.html",controller:"otherProfileController as otherProfileCtrl",restricted:!0}).state("offer",{url:"/offer/:id",templateUrl:"templates/offer.html",controller:"offerController as offerCtrl",restricted:!0})}]),myApp.run(["$rootScope","$location","$state","AuthService",function(e,o,t,r){e.$on("$stateChangeError",console.log.bind(console)),e.$on("$stateChangeStart",function(o,n,s,a,i){r.getUserStatus().then(function(){n.restricted&&!r.isLoggedIn()&&(e.returnToState=n.url,e.returnToStateParams=s.id,t.go("login"))})})}]),angular.module("myApp").factory("AuthService",["$q","$timeout","$http","$state",function(e,o,t,r){function n(){return!!f}function s(){return t.get("/user/status").success(function(e){f=!!e.status}).error(function(e){f=!1})}function a(o,r){var n=e.defer();return t.post("/user/login",{username:o,password:r}).success(function(e,o){200===o&&e.status?(f=!0,n.resolve()):(f=!1,n.reject())}).error(function(e){f=!1,n.reject()}),n.promise}function i(){var o=e.defer();return t.get("/user/logout").success(function(e){f=!1,o.resolve()}).error(function(e){f=!1,o.reject()}),o.promise}function c(o,r,n){var s=e.defer();if(n.p)var a="/user/register?addTo="+n.p;else if(n.r)var a="/user/register?requestTo="+n.r;else var a="/user/register";return console.log(a),t.post(a,{username:o.username,first_name:o.first_name,last_name:o.last_name,password:o.password,role:r}).success(function(e,o){200===o&&e.status?s.resolve():s.reject()}).error(function(e){s.reject()}),s.promise}function l(o){var r=e.defer();return t.post("/user/forgot-password",{email:o}).success(function(e,o){e.user===!1?r.resolve({message:"rejected"}):r.resolve({message:"resolved"})}).error(function(e){r.reject({message:"rejected"})}),r.promise}function u(o){var r=e.defer();return t.post("/user/check-token",{token:o}).success(function(e,o){if(200===o)r.resolve(e);else{r.reject()}}).error(function(e){f=!1,r.reject()}),r.promise}function d(o,r){var n=e.defer();return t.post("/user/reset/"+o,{password:r}).success(function(e,o){if(200===o)n.resolve(e);else{n.reject()}}).error(function(e){f=!1,n.reject()}),n.promise}var f=null;return{isLoggedIn:n,getUserStatus:s,login:a,logout:i,register:c,forgotPassword:l,checkToken:u,resetPassword:d}}]),angular.module("myApp").controller("crewListController",crewListController),crewListController.$inject=["$rootScope","$http","$stateParams","$state","AuthService","$mixpanel"],angular.module("myApp").controller("forgotPasswordController",forgotPasswordController),forgotPasswordController.$inject=["$rootScope","$state","$stateParams","$http","AuthService"],angular.module("myApp").controller("homeController",homeController),homeController.$inject=["$rootScope","$state","$stateParams"],angular.module("myApp").controller("loginController",loginController),loginController.$inject=["$rootScope","$state","$stateParams","AuthService"],angular.module("myApp").controller("logoutController",logoutController),logoutController.$inject=["$rootScope","$state","AuthService"],angular.module("myApp").controller("mainController",mainController),mainController.$inject=["$rootScope","$state","AuthService","$location"],angular.module("myApp").controller("offerController",offerController),offerController.$inject=["$rootScope","AuthService","$http","$stateParams","$state","$mixpanel"],angular.module("myApp").controller("otherProfileController",otherProfileController),otherProfileController.$inject=["$rootScope","$http","$stateParams","$state","AuthService"],angular.module("myApp").controller("postController",postController),postController.$inject=["$rootScope","$http","$stateParams","$state","AuthService"],angular.module("myApp").controller("productionController",productionController),productionController.$inject=["$rootScope","$http","$stateParams","$state","AuthService","$mixpanel"],angular.module("myApp").controller("productionListController",productionListController),productionListController.$inject=["$rootScope","$http","$stateParams","$state","AuthService","$mixpanel"],angular.module("myApp").controller("registerController",registerController),registerController.$inject=["$rootScope","$state","$stateParams","AuthService"],angular.module("myApp").controller("resetPasswordController",resetPasswordController),resetPasswordController.$inject=["$rootScope","$state","$stateParams","AuthService"];